select distinct(shipping_providers)
from shipping


select * from shipping
where return_date is not null
--------------------------------------
--Query the top 10 products by total sales value.
--Include product name, total quantity sold, and total sales value.

alter table order_items
add column total_sale float

update order_items
set total_sale =quantity*price_per_unit

select * from order_items

select 
oi.product_id,
p.product_name,
count(o.order_id) as total_orders,
sum(oi.total_sale) as total_sale
from orders o
left join order_items oi
on o.order_id =oi.order_id
left join products p
on p.product_id =oi.product_id
group by 1,2
order by 4 desc
limit 10

--Revenue by Category
--Calculate total revenue generated by each product category.
--Challenge: Include the percentage contribution of each category to total revenue
SELECT 
	p.category_id,
	c.category_name,
	SUM(oi.total_sale) as total_sale,
	SUM(oi.total_sale)/
					(SELECT SUM(total_sale) FROM order_items) 
					* 100
	as contribution
FROM order_items as oi
JOIN
products as p
ON p.product_id = oi.product_id
LEFT JOIN category as c
ON c.category_id = p.category_id
GROUP BY 1, 2
ORDER BY 3 DESC

/*
3. Average Order Value (AOV)
Compute the average order value for each customer.
Challenge: Include only customers with more than 5 orders.
*/
select c.customer_id,
concat(c.first_name,' ', c.last_name) as full_name,
sum(total_sale)/count(o.order_id) as AOV,
count(o.order_id) as total_orders
from customers c
left join orders o
on c.customer_id =o.customer_id
left join order_items oi
on oi.order_id =o.order_id
group by 
1,2
having count(o.order_id)>5


/*
4. Monthly Sales Trend
Query monthly total sales over the past year.
Challenge: Display the sales trend, grouping by month, return current_month sale, last month sale!
/*

select 
year,
month,
total_sale as current_month_sale,
lag(total_sale,1) over (order by year,month) as last_month_sale
from
(select 
extract(month from order_date) as month,
extract(year from order_date ) as year,
round(sum(oi.total_sale)::numeric ,2)as total_sale
from orders o
join order_items oi
on o.order_id = oi.order_id
where order_date >=current_date - interval '1 year'
group by 1,2) as t1

--Customers with No Purchases
--Find customers who have registered but never placed an order.
--Challenge: List customer details and the time since their registration

select * from customers c
left join orders o
on c.customer_id = o.customer_id
where o.order_id is null


/*
6. Least-Selling Categories by State
Identify the least-selling product category for each state.
Challenge: Include the total sales for that category within each state.
*
/

